#+title: Estrutura de Dados
#+author: Matheus de Souza Pessanha
#+email: matheus_pessanha2001@outlook.com

#+caption: PRs
[[https://img.shields.io/badge/PRs-welcome-brightgreen.svg]]

#+caption: build
[[https://github.com/Mdsp9070/estrutura_de_dados/workflows/build/badge.svg?branch=main]]
ps: caso essa "badge" esteja com a cor verde, significa que todos os testes passaram!

Este reposit√≥rio tem a finalidade de abrigar meus estudos e exerc√≠cios
referentes √† mat√©ria de =Estrutura de Dados= na =UENF=!

Al√©m disso, este reposit√≥rio √© aberto para qualquer um que queira propor
novas implementa√ß√µes ou novas Estruturas de Dados/Algoritmos!

Colocarei aqui minhas solu√ß√µes e testes tanto para a primeira parte da mat√©ria
(EDI) quanto para a segunda parte, no pr√≥ximo semestre (EDII).

Decidi fazer todos os trabalhos e exerc√≠cios com a linguagem =Haskell=!

** Aviso!

Este reposit√≥rio est√° em fase de desenvolvimento e ainda sofrer√° m√∫ltiplas
mudan√ßas nas implementa√ß√µes!

Junto a isso, n√£o √© recomendado o uso dessas estruturas fora do √¢mbito para estudos,
pois existem implementa√ß√µes bem mais robustas.

O ponto mais importante para se levar em conta √© que os exerc√≠cios que fa√ßo passados
pela cadeira de Estrutura de Dados da minha universidade, obviamente comtempla
estruturas que s√£o ineretemente imperativas/mut√°veis ou simplesmente n√£o adequadas
para uso num paradigma funcional e muito menos numa linguagem "pregui√ßosa".

Minhas implementa√ß√µes desses exerc√≠cios tem o √∫nico intuito de cumprir os exerc√≠cios
propostos e de forma alguma vis√£o a melhor performance.

Entretanto, tenho ci√™ncia que h√° implementa√ß√µes e estruturas que foram desenvolvidas
especificadamente para o paradigma funcional. Um desses materiais √© encontrado nesse
reposit√≥rio que √© o livro _Purely Functional Data Structures_ do _Chris Okasaki_.

Minha inten√ß√£o √© que ap√≥s cumprir os exerc√≠cios da cadeira na universidade eu irei
me aprofundar no quesito mais te√≥rio dessas estruturas e irei realizar as implementa√ß√µes.

Com isso, √© poss√≠vel perceber que algumas estruturas n√£o fazem muito sentido no mundo
funcional, como uma =Lista Duplamente Encadeada=, onde um =Zipper= seria muito mais
adequado e perfom√°tico.

** Introdu√ß√£o ao Haskell
   Caso voc√™ nunca tenha visto nada sobre =Haskell=, leia [[./INTRODUCAO.org][este arquivo]].
** Como contribuir?
   Por favor, siga as instru√ß√µes de contribui√ß√£o [[./CONTRIBUTING.org][deste arquivo]].
** Material
   Al√©m das implementa√ß√µes, voc√™ ir√° encontrar todo o material que usei como base
   para esta mat√©ria, feito upload na pasta =docs= deste reposit√≥rio!

   Obviamente pedi permiss√£o ao professor, e ele permitiu eu fazer upload dos slides dele.

   Tmb√©m fa√ßo ref√™ncia √† materiais de apoio, v√≠deos e etc... Tudo pode ser encontrado [[./docs][aqui]].
** Como rodar os testes?
*** Depend√™ncias
    1. =ghc= -> compilador para =Haskell=
    2. =stack= -> ferramente de build (assim como o CMake)

  Clone este reposit√≥rio e rode =stack test= üôÇ

** Exerc√≠cios
*** LE1
1. [[./src/LE1/Cilindro/README.org][Cilindro]]
2. [[./src/LE1/ConjuntoInt/README.org][Conjunto de Inteiros]]
3. [[./src/LE1/Data/README.org][Data]]
4. [[./src/LE1/Clientes/README.org][Clientes]]
5. [[./src/LE1/Matriz/README.org][Matrizes]]
6. [[./src/LE1/Recursao/README.org][Recurs√£o]]

*** LE2
1. [[./src/LE2/Stack/README.org][Stack]]

** Testes
  Todos os testes podem ser achados na sua respectiva pasta dentro do diret√≥rio [[./test][test]].
